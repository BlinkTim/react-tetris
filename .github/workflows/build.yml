name: Build and Push Docker Image

on:
  push:
    tags:
      - '*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Display username
        run: echo ${{ github.actor }}
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: blinktim
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        env:
          DOCKER_CLI_DEBUG: '1'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'  # WÃ¤hle hier eine aktuelle Version, zum Beispiel '14'

      - name: Build and Push Docker Image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            tetris-app:latest
            ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && github.ref_type == 'tag' && env.TAG_NAME != '' && env.TAG_NAME != 'refs/tags/latest' && contains(env.TAG_NAME, 'refs/tags/') && env.TAG_NAME || 'latest' }}

      - name: Extract Tag Name
        id: extract_tag
        run: echo "TAG_NAME=$(echo $GITHUB_REF | sed 's|.*/||')" >> $GITHUB_ENV

      - name: Set Docker Image Tag
        id: set_image_tag
        run: echo "DOCKER_IMAGE_TAG=${{ env.TAG_NAME }}" >> $GITHUB_ENV

      - name: Set Docker Metadata
        uses: docker/metadata-action@v3
        with:
          images: tetris-app:${{ steps.set_image_tag.outputs.DOCKER_IMAGE_TAG }}
